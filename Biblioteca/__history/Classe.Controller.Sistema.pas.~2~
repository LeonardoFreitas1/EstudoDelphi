unit Classe.Controller.Sistema;

interface
uses
  Classe.Conexao, System.SysUtils;

  type
    TSistemaControl = class
      private
        class var FInstance: TSistemaControl;
        FConexao: TConexao;

      class var TInstance: TConexao;

      public
      constructor Create;
      destructor Destroy; override;

      class function GetInstance: TSistemaControl;
      property Conexao: TConexao read  FConexao write FConexao;
    end;
implementation

{ TControllerUsuario }



constructor TSistemaControl.Create;
begin
  FConexao := TConexao.Create;

end;

destructor TSistemaControl.Destroy;
begin
   FreeAndNil(FConexao);
  inherited;
end;

function TSistemaControl.GetInstance: TSistemaControl;
begin
  if not Assigned(Self.FInstance) then
  begin
    Self.FInstance := TSistemaControl.Create();
  end;

  Result := Self.FInstance;
end;

end.
